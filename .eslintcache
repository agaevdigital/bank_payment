[{"C:\\React\\Projects\\internet-pay\\src\\index.tsx":"1","C:\\React\\Projects\\internet-pay\\src\\App.js":"2","C:\\React\\Projects\\internet-pay\\src\\reportWebVitals.js":"3","C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Header.tsx":"4","C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Nav\\Nav.tsx":"5","C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Langs\\Langs.tsx":"6","C:\\React\\Projects\\internet-pay\\src\\components\\common\\Button\\Button.tsx":"7","C:\\React\\Projects\\internet-pay\\src\\components\\Footer\\Footer.tsx":"8","C:\\React\\Projects\\internet-pay\\src\\Hooks\\useLocale.tsx":"9","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Tariff\\Tariff.tsx":"10","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Product.tsx":"11","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Company.tsx":"12","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Payment.tsx":"13","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Potential\\Potential.tsx":"14","C:\\React\\Projects\\internet-pay\\src\\components\\About\\About.tsx":"15","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Products\\Products.tsx":"16","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Info\\Info.tsx":"17","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Application\\Application.tsx":"18","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Contact\\Contact.tsx":"19","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Actividad\\Actividad.tsx":"20","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Feedback\\Feedback.tsx":"21","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Pay\\Pay.tsx":"22","C:\\React\\Projects\\internet-pay\\src\\components\\common\\Crumbs\\Crumbs.tsx":"23","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Plus\\Plus.tsx":"24"},{"size":550,"mtime":1607445655609,"results":"25","hashOfConfig":"26"},{"size":1124,"mtime":1607521148951,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2481,"mtime":1607444661692,"results":"29","hashOfConfig":"26"},{"size":3054,"mtime":1607522135504,"results":"30","hashOfConfig":"26"},{"size":735,"mtime":1607444577810,"results":"31","hashOfConfig":"26"},{"size":656,"mtime":1607438405857,"results":"32","hashOfConfig":"26"},{"size":3526,"mtime":1607494506174,"results":"33","hashOfConfig":"26"},{"size":317,"mtime":1607443272500,"results":"34","hashOfConfig":"26"},{"size":7825,"mtime":1607519852134,"results":"35","hashOfConfig":"26"},{"size":646,"mtime":1607496485200,"results":"36","hashOfConfig":"26"},{"size":705,"mtime":1607511358219,"results":"37","hashOfConfig":"26"},{"size":518,"mtime":1607519327274,"results":"38","hashOfConfig":"26"},{"size":2413,"mtime":1607518296918,"results":"39","hashOfConfig":"26"},{"size":2104,"mtime":1607518989594,"results":"40","hashOfConfig":"26"},{"size":6136,"mtime":1607517170559,"results":"41","hashOfConfig":"26"},{"size":3214,"mtime":1607518296923,"results":"42","hashOfConfig":"26"},{"size":2509,"mtime":1607519073776,"results":"43","hashOfConfig":"26"},{"size":2270,"mtime":1607518296913,"results":"44","hashOfConfig":"26"},{"size":2012,"mtime":1607506703932,"results":"45","hashOfConfig":"26"},{"size":3447,"mtime":1607517136336,"results":"46","hashOfConfig":"26"},{"size":5091,"mtime":1607518896515,"results":"47","hashOfConfig":"26"},{"size":840,"mtime":1607519631582,"results":"48","hashOfConfig":"26"},{"size":4049,"mtime":1607519491881,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"as8kmy",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\Projects\\internet-pay\\src\\index.tsx",[],["108","109"],"C:\\React\\Projects\\internet-pay\\src\\App.js",[],"C:\\React\\Projects\\internet-pay\\src\\reportWebVitals.js",[],["110","111"],"C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Header.tsx",["112"],"import React, {useEffect, useState} from \"react\";\r\nimport c from './Header.module.css';\r\nimport Nav from \"./Nav/Nav\";\r\nimport Langs from \"./Langs/Langs\";\r\nimport Button from \"../common/Button/Button\";\r\nimport logo from \"./../../assets/img/header/logo.png\";\r\nimport useLocale from \"../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    lang: string\r\n    setLang: (lang: string) => void\r\n};\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n    const [stateNav, setStateNav] = useState(false);\r\n    const lang = props.lang;\r\n\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            entry : \"Вход\",\r\n            register: \"Регистрация\",\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            entry : \"Entrance\",\r\n            register: \"Check in\",\r\n        }\r\n    ];\r\n\r\n    let setLocale = useLocale(lang, locale) || locale[0];\r\n\r\n    return(\r\n        <header className={c.header} id=\"header\">\r\n            <div className=\"container\">\r\n                <div className={c.header__top}>\r\n                    <Langs {...props}/>\r\n                </div>\r\n                <div className={c.header__line}></div>\r\n                <div className={c.header__bottom}>\r\n                    <div className={c.header__left}>\r\n                        <a href=\"/\" className={c[\"header__logo-link\"]}>\r\n                            <img src={logo} alt=\"\" className={c.header__logo} />\r\n                        </a>\r\n                    </div>\r\n                    <div className={stateNav? `${c.header__right} ${c.header__right_active}` : c.header__right}>\r\n                        <Nav lang={lang} />\r\n                        <div className={c.header__buttons}>\r\n                            <Button type=\"transparent\" className={`${c.header__button} ${c[\"header__button-auth\"]}`}>\r\n                                {setLocale.entry}\r\n                            </Button>\r\n                            <Button type=\"orange\" className={`${c.header__button} ${c[\"header__button-register\"]}`}>\r\n                                {setLocale.register}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={stateNav? `${c.burger} ${c.burger_active}` : c.burger} onClick={() => setStateNav(!stateNav)}>\r\n                        <span className={c.burger__line}></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Nav\\Nav.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Header\\Langs\\Langs.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\common\\Button\\Button.tsx",["113"],"import React from \"react\";\r\nimport c from \"./Button.module.css\";\r\n\r\ntype PropsType = {\r\n    type: string\r\n    children: string\r\n    className: string\r\n};\r\n\r\nconst Button: React.FC<PropsType> = (props) => {\r\n    const { type, children, className } = props;\r\n\r\n    let typeClass = \"btn \";\r\n    if(type === \"orange\") {\r\n        typeClass += \"btn_orange\";\r\n    }else {\r\n        if(type !== \"none\") {\r\n            typeClass += \"btn_transparent\";\r\n        }\r\n        //if empty then no additional class\r\n    }\r\n\r\n    return(\r\n        <button className={`${className} ${typeClass}`}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","C:\\React\\Projects\\internet-pay\\src\\components\\Footer\\Footer.tsx",["114","115","116"],"import React from \"react\";\r\nimport c from \"./Footer.module.css\";\r\nimport logo from \"./../../assets/img/footer/logo.png\";\r\nimport Button from \"../common/Button/Button\";\r\nimport useLocale from \"../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    lang: string\r\n}\r\n\r\ntype LocaleType = {\r\n    text: string\r\n    name: string\r\n    transferLink: string\r\n    payLink: string\r\n    entry: string\r\n    register: string\r\n    subscribe: string\r\n}\r\n\r\nconst Footer: React.FC<PropsType> = (props) => {\r\n    const lang = props.lang;\r\n\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            text: \"Надежный поставщик платежных решений для различных компаний по всему Миру.\",\r\n            name: \"Продукты\",\r\n            transferLink: \"Банковские переводы\",\r\n            payLink: \"Интернет эквайринг\",\r\n            entry: \"Вход\",\r\n            register: \"Регистрация\",\r\n            subscribe: \"© Все права защищены.\",\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            text: \"Reliable provider of payment solutions for various companies around the World.\",\r\n            name: \"Products\",\r\n            transferLink: \"Bank transfers\",\r\n            payLink: \"Internet acquiring\",\r\n            entry: \"Entrance\",\r\n            register: \"Check in\",\r\n            subscribe: \"© All rights reserved.\",\r\n        }\r\n    ];\r\n\r\n    let setLocale: LocaleType = useLocale(lang, locale) || locale[0];\r\n\r\n    return(\r\n        <footer className={c.footer} id=\"footer\">\r\n            <div className=\"container\">\r\n                <div className={c.footer__top}>\r\n                    <a href=\"#\" className={c[\"footer__logo-link\"]}>\r\n                        <img src={logo} alt=\"logotype\" className={c[\"footer__logo-img\"]} />\r\n                    </a>\r\n                </div>\r\n                <div className={c.footer__middle}>\r\n                    <div className={c.footer__left}>\r\n                        <div className={c.footer__text}>\r\n                            {setLocale.text}\r\n                        </div>\r\n                    </div>\r\n                    <div className={c.footer__right}>\r\n                        <div className={c.footer__name}>\r\n                            {setLocale.name}\r\n                        </div>\r\n                        <ul className={c.footer__list}>\r\n                            <li className={c.footer__elem}>\r\n                                <a href=\"\" className={c.footer__link}>{setLocale.transferLink}</a>\r\n                            </li>\r\n                            <li className={c.footer__elem}>\r\n                                <a href=\"\" className={c.footer__link}>{setLocale.payLink}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={c.footer__buttons}>\r\n                    <Button type=\"transparent\" className={`${c.footer__button} ${c.footer__button_auth}`} >\r\n                        {setLocale.entry}\r\n                    </Button>\r\n                    <Button type=\"orange\" className={`${c.footer__button} ${c.footer__button_registr}`} >\r\n                        {setLocale.register}\r\n                    </Button>\r\n                </div>\r\n                <div className={c.footer__subscribe}>\r\n                    {setLocale.subscribe}\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","C:\\React\\Projects\\internet-pay\\src\\Hooks\\useLocale.tsx",["117","118"],"import React, {useEffect} from \"react\";\r\n\r\n\r\n\r\nconst useLocale= (lang: string, locale: Array<any>) => {\r\n    let setLocale = locale.find((l) => l.lang === lang);\r\n\r\n    useEffect(() => {\r\n        setLocale = locale.find((l) => l.lang === lang);\r\n    }, [lang])\r\n\r\n    return setLocale;\r\n}\r\n\r\nexport default useLocale;","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Tariff\\Tariff.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Product.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Company.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Payment.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Potential\\Potential.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\About\\About.tsx",["119"],"import React from \"react\";\r\nimport c from \"./About.module.css\";\r\nimport Button from \"../common/Button/Button\";\r\nimport useLocale from \"../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    img: string\r\n    color: string\r\n    lang: string\r\n};\r\n\r\ntype LocaleType = {\r\n    lang: string\r\n    pretitle: string\r\n    title: string\r\n    subtitle: string\r\n    buttons: string\r\n}\r\n\r\nconst About: React.FC<PropsType> = (props) => {\r\n    const { img, color, lang } = props;\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            pretitle: \"Платежный сервис\",\r\n            title: \"Надежный поставщик платежных решений для различных компаний по всему Миру\",\r\n            subtitle: \"Переводите деньги онлайн, самым современным и безопасным способом.\",\r\n            button: \"Подробнее\",\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            pretitle: \"Payment service\",\r\n            title: \"Reliable provider of payment solutions for various companies around the world\",\r\n            subtitle: \"Transfer money online in the most modern and secure way.\",\r\n            button: \"More details\",\r\n        }\r\n    ];\r\n\r\n    const setLocale = useLocale(lang, locale);\r\n\r\n    return(\r\n        <section className={color === \"white\"? `${c.about} ${c.about_white}` : c.about}>\r\n            <img src={img} alt=\"\" className={c.about__img}/>\r\n            <div className=\"container container_relative\">\r\n                <h2 className={c.about__pretitle}>\r\n                    {setLocale.pretitle}\r\n                </h2>\r\n                <h1 className={c.about__title + \" title\"}>\r\n                    {setLocale.title}\r\n                </h1>\r\n                <div className={c.about__subtitle}>\r\n                    {setLocale.subtitle}\r\n                </div>\r\n                <Button type=\"orange\" className={c.about__button}>\r\n                    {setLocale.button}\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Products\\Products.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Info\\Info.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Product\\Application\\Application.tsx",["120","121"],"import React from \"react\";\r\nimport c from \"./Application.module.css\";\r\nimport img from \"./../../../../assets/img/application/img.png\";\r\nimport qr from \"./../../../../assets/img/application/qr.png\";\r\nimport useLocale from \"../../../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    lang: string\r\n}\r\n\r\ntype LocaleType = {\r\n    title: string\r\n    subtitle: string\r\n}\r\n\r\nconst Application: React.FC<PropsType> = (props) => {\r\n    const lang = props.lang;\r\n\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            title: \"PAYSUNION в твоем телефоне\",\r\n            subtitle: \"Скачайте официальное приложение\",\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            title: \"Paysunion on your phone\",\r\n            subtitle: \"Download the official app\",\r\n        }\r\n    ]\r\n\r\n    let setLocale: LocaleType = useLocale(lang, locale) || locale[0];\r\n\r\n    return(\r\n        <section className={c.application}>\r\n            <div className={c.application__container + \" container\"}>\r\n                <div className={c.application__content}>\r\n                    <div className={c.application__left}>\r\n                        <img src={img} alt=\"\" className={c.application__img} />\r\n                    </div>\r\n                    <div className={c.application__right}>\r\n                        <h2 className={c.application__title + \" title\"}>\r\n                            {setLocale.title}\r\n                        </h2>\r\n                        <div className={c.application__subtitle}>\r\n                            {setLocale.subtitle}\r\n                        </div>\r\n                        <div className={c.application__bottom}>\r\n                            <div className={c.application__links}>\r\n                                <a href=\"#\" className={c.application__link}>\r\n                                    {/*<img src=\"img/application/icon1.png\" alt=\"\" className={c.application__icon} />*/}\r\n                                </a>\r\n                                <a href=\"#\" className={c.application__link}>\r\n                                    {/*<img src=\"img/application/icon2.png\" alt=\"\" className={c.application__icon} />*/}\r\n                                </a>\r\n                            </div>\r\n                            <img src={qr} alt=\"\" className={c.application__qr} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Application;","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Contact\\Contact.tsx",["122"],"import React from \"react\";\r\nimport c from \"./Contact.module.css\";\r\nimport img from \"./../../../../assets/img/contact/img.jpg\";\r\nimport useLocale from \"../../../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    lang: string\r\n}\r\n\r\ntype LocaleType = {\r\n    lang: string\r\n    title: string\r\n    text: Array<string>\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = (props) => {\r\n    const lang = props.lang;\r\n\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            title: \"Компания создана в соответствии с законодательством Чешской Республики\",\r\n            text: [\r\n                \"Регистрационный Номер: 27378527\",\r\n                \"Название компании: Money Change s.r.o.\",\r\n                \"Юридический адрес: Na hutích 581/1, Praha, 160 00, Чехия\",\r\n            ],\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            title: \"THE COMPANY IS ESTABLISHED IN ACCORDANCE WITH THE LEGISLATION OF THE CZECH REPUBLIC\",\r\n            text: [\r\n                \"Registration Number: 27378527\",\r\n                \"Company name: Money Change s.r.o.\",\r\n                \"Legal Address: Na hutich 581 / 1, Praha , 160 00, Czech Republic\",\r\n            ],\r\n        }\r\n    ]\r\n\r\n    let setLocale: LocaleType = useLocale(lang, locale) || locale[0];\r\n\r\n    return(\r\n        <section className={c.contact}>\r\n            <div className=\"container\">\r\n                <div className={c.contact__content}>\r\n                    <div className={c.contact__left}>\r\n                        <img src={img} alt=\"\" className={c.contact__img} />\r\n                    </div>\r\n                    <div className={c.contact__right}>\r\n                        <h2 className={c.contact__title + \" title\"}>\r\n                            {setLocale.title}\r\n                        </h2>\r\n                        <div className={c.contact__block}>\r\n                            {setLocale.text.map((t) => {\r\n                                <div className={c.conatct__text}>{t}</div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Contact;","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Actividad\\Actividad.tsx",["123"],"import React from \"react\";\r\nimport useLocale from \"../../../../Hooks/useLocale\";\r\n\r\ntype PropsType = {\r\n    lang: string\r\n}\r\n\r\ntype LocaleType = {\r\n    lang: string\r\n    subtitle: string\r\n    elems: Array<string>\r\n}\r\n\r\nconst Actividad: React.FC<PropsType> = (props) => {\r\n    const lang = props.lang;\r\n\r\n    const locale = [\r\n        {\r\n            lang: \"ru\",\r\n            subtitle: \"Деятельность\",\r\n            elems: [\r\n                \"Международные банковские переводы SWIFT и SEPA;\",\r\n                \"Эквайринг банковских карт VISA и MASTERCARD;\",\r\n                \"Обработка платежей для платежных систем и банков;\",\r\n                \"Выпуск банковских карт VISA и MASTERCARD;\",\r\n                \"Банкоматы и POS-терминалы для приема фиатных денег;\",\r\n            ],\r\n        },\r\n        {\r\n            lang: \"en\",\r\n            subtitle: \"Activities\",\r\n            elems: [\r\n                \"International bank transfers SWIFT and SEPA;\",\r\n                \"Acquiring bank cards VISA and MASTERCARD;\",\r\n                \"Payment processing for payment systems and banks;\",\r\n                \"Issuance of VISA and MASTERCARD bank cards;\",\r\n                \"ATMs and POS- terminals for accepting fiat money;\",\r\n            ],\r\n        }\r\n    ]\r\n\r\n    let setLocale: LocaleType = useLocale(lang, locale) || locale[0];\r\n\r\n    return(\r\n        <section className=\"actividad none\">\r\n            <div className=\"container\">\r\n                <h2 className=\"actividad__title subtitle\">\r\n                    {setLocale.subtitle}\r\n                </h2>\r\n                <ul className=\"actividad__list\">\r\n                    {setLocale.elems.map((e) => {\r\n                        <li className=\"actividad__elem\">{e}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Actividad;","C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Company\\Feedback\\Feedback.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Pay\\Pay.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\common\\Crumbs\\Crumbs.tsx",[],"C:\\React\\Projects\\internet-pay\\src\\components\\Main\\Payment\\Plus\\Plus.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"132","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":9},{"ruleId":"133","severity":1,"message":"134","line":53,"column":21,"nodeType":"135","endLine":53,"endColumn":68},{"ruleId":"133","severity":1,"message":"134","line":69,"column":33,"nodeType":"135","endLine":69,"endColumn":71},{"ruleId":"133","severity":1,"message":"134","line":72,"column":33,"nodeType":"135","endLine":72,"endColumn":71},{"ruleId":"128","severity":1,"message":"136","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":9,"column":21,"nodeType":"139","endLine":9,"endColumn":56},{"ruleId":"128","severity":1,"message":"140","line":12,"column":6,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":50,"column":33,"nodeType":"135","endLine":50,"endColumn":77},{"ruleId":"133","severity":1,"message":"134","line":53,"column":33,"nodeType":"135","endLine":53,"endColumn":77},{"ruleId":"141","severity":1,"message":"142","line":54,"column":53,"nodeType":"143","messageId":"144","endLine":54,"endColumn":55},{"ruleId":"141","severity":1,"message":"142","line":51,"column":46,"nodeType":"143","messageId":"144","endLine":51,"endColumn":48},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'c' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'setLocale' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'LocaleType' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]